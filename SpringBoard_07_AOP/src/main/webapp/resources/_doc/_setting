 0. 환경설정
 	인코딩, 폰트, 브라우저, 퍼스펙티브, jsp(jstl), class (logger) 템플릿, 
 	프로젝트 facet
 
 1. pom.xml 설정
 	- 전자정부 프레임워크 >  표준프레임워크 소개 > 구성 > 오픈소스 SW 현황 참고
 	
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>4.3.22.RELEASE</org.springframework-version>
		<org.aspectj-version>1.9.0</org.aspectj-version>
		<org.log4j-version>2.11.2</org.log4j-version>
		<org.slf4j-version>1.7.25</org.slf4j-version>
		<spring.security-version>4.2.11.RELEASE</spring.security-version>
		<org.quartz-version>2.3.2</org.quartz-version>
	</properties>
	
 2. log4j2 설정 > log4j2.xml 로 파일명 변경	
	[ # log4j 2 및 slf4j maven dependency 설정 ]
	log4j-slf4j-impl jar(actifactId) 사용시 1.7.x 이하 version 사용
	log4j-slf4j18-impl jar(actifactId) 사용시 1.8.x 이상 version 사용
	
	* spring 의 경우 default 로 jcl(commons-logging)사용하므로 이를 slf4j 로 대체하기 위해
	 jcl-over-slf4j 사용

	* jcl(commons-logging) 대신 slf4j 를 사용하므로 spring-context 에서 commons-logging 제거(exclude)

	* jcl-over-slf4j 내부적으로 slf4j-api dependency 를 포함하고 있으므로 slf4j-api 는 
	  별도의 dependency 로 추가 하지 않음

	* log4j-core 내에 log4j-api dependency 포함하므로 log4j-slf4j-impl 에서 해당 의존성 제거
	
	[ #log4j2.xml 설정 ]
	src/main/resources/ 경로에 생성(/WEB-INF/classes/).
	해당 위치에 파일을 위치시킬 경우 log4j 가 초기화 될 때 알아서 해당 파일을 읽어들임

	* src/main/resource/ 밑이 아닌 기타 경로에 해당 파일을 위치시킬 경우
	web.xml 에 아래와 같이 추가

	참고 : https://okky.kr/article/282263
	
	* 아파치(apache) 관련 로그 끄는 방법


	log4j2.xml에서

	<logger name="org.apache.commons" level="OFF" additivity="false">
		<AppenderRef ref="Console"/>
		<AppenderRef ref="RollingFile" />
	</logger>
	요렇게 입력해주면 아파치로 인해 찍히는 로그들을 안 보이게 된다.

	너무 많이 찍혀서...Digester로 찍히는 것도 많았는데 이것만 끄려면
	<logger name="org.apache.commons.digester.Digester" level ="OFF" additivity="false">
		<AppenderRef ref="Console"/>
		<AppenderRef ref="RollingFile" />
	</logger>
	- pom.xml > 스프링 test, tx, jdbc 추가
	
	-  로깅 부분
			<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${org.log4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${org.log4j-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of log4j-core -->
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
			<version>1.16</version>
		</dependency>
		
	 - pom.xml 서블릿 부분 변경
	 	<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		
	- junit > 4.12로 변경
	
	- AOP
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
	
	- DB 부분 설정
			<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.6</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.6</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
  			<groupId>mysql</groupId>
  			<artifactId>mysql-connector-java</artifactId>
  			<version>5.1.48</version>
		</dependency>
		
	- Util 설정
		<!-- Utils -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.10</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${fasterxml.jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${fasterxml.jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>
		
	- Security 설정
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		
	- 스케쥴러 설정
		<!-- Scheduler -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${org.quartz-version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>${org.quartz-version}</version>
		</dependency>
		
	- Maven plugin 변경 > 1.8
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			
3. ojdbc6.jar 준비 후 빌드패스에 등록

4. JDBC Test code 작성

5. log4jdbc.log4j2.properties 파일 생성 후 
	log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator 입력
	
6. root-context.xml에 HikariCP, Mybatis, component-scan 설정

7. src/resources > mappers, src/java > domain, persistence, service 패키지 생성

8. src/resources > MybatisConfig.xml 파일 생성